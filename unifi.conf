# Listen HTTP, and redirect it to HTTPS
server {
	listen 80;
	listen [::]:80;
	server_name your.server.name www.your.server.name;

    # Redirect http to https
	return 301 https://$server_name$request_uri;

	# nextcloud related thing
	# proxy_buffering off;
	
	# X-headers 
#	add_header X-Content-Type-Options nosniff;
#	add_header X-XSS-Protection "1; mode=block";
	add_header X-Frame-Options "SAMEORIGIN"; 

}


server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name your.server.name;
	
    # nextcloud filedownload via stream fix
	# proxy_buffering off;

	access_log /var/log/nginx/your.server.name_https_access.log;
	error_log /var/log/nginx/your.server.name_https_error.log; 
	ssl on;

	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

#fix filesize errors, nextcloud related
# client_max_body_size 50G;


# don't send the nginx version number in error pages and Server header
	server_tokens off;

# disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
    ssl_protocols TLSv1.2 TLSv1.3;

# enables server-side protection from BEAST attacks
# http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
    ssl_prefer_server_ciphers on; 

# ciphers chosen for forward secrecy and compatibility
# http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
  	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

# ssl certs
   	ssl_certificate /etc/letsencrypt/live/wcdi.cc-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wcdi.cc-0001/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/wcdi.cc-0001/chain.pem;

# enable session resumption to improve https performance
# http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
	ssl_session_cache shared:SSL2:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

# enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
# http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
	ssl_stapling on;
 	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 1.1.1.1 9.9.9.9 valid=300s;
	resolver_timeout 5s;

# config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
# to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
# also https://hstspreload.org/	
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;";

location / {
	proxy_pass https://your.server.local.location:8443; 
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
	proxy_read_timeout 86400;	
	proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
   	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
}
